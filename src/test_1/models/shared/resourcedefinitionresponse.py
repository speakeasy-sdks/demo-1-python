"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import matchingcriteriaresponse as shared_matchingcriteriaresponse
from ..shared import valuessecretsresponse as shared_valuessecretsresponse
from dataclasses_json import Undefined, dataclass_json
from test_1 import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class ResourceDefinitionResponse:
    r"""A Resource Definitions describes how and when a resource should be provisioned. It links a driver (the how) along with a Matching Criteria (the when) to a Resource Type. This allows Humanitec to invoke a particular driver for the required Resource Type in the context of a particular Application and Environment.
    
    The schema for the `driver_inputs` is defined by the `input_schema` property on the DriverDefinition identified by the `driver_type` property.
    """
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The Resource Definition ID."""
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The display name."""
    org_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('org_id') }})
    r"""The Organization ID."""
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The Resource Type."""
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""The timestamp of when this record has been created."""
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_by'), 'exclude': lambda f: f is None }})
    r"""The user who created this record."""
    criteria: Optional[list[shared_matchingcriteriaresponse.MatchingCriteriaResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('criteria'), 'exclude': lambda f: f is None }})
    r"""(Optional) The criteria to use when looking for a Resource Definition during the deployment."""
    driver_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driver_account'), 'exclude': lambda f: f is None }})
    r"""(Optional) Security account required by the driver."""
    driver_inputs: Optional[shared_valuessecretsresponse.ValuesSecretsResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driver_inputs'), 'exclude': lambda f: f is None }})
    r"""ValuesSecrets stores data that should be passed around split by sensitivity."""
    driver_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driver_type'), 'exclude': lambda f: f is None }})
    r"""The driver to be used to create the resource."""
    is_default: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_default'), 'exclude': lambda f: f is None }})
    r"""Indicates this definition is a built-in one (provided by Humanitec)."""
    is_deleted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_deleted'), 'exclude': lambda f: f is None }})
    r"""Indicates if this record has been marked for deletion. The Resource Definition that has been marked for deletion cannot be used to provision new resources."""
    

