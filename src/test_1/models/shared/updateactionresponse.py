"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from test_1 import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateActionResponse:
    r"""A representation of the main object defined in JSON Patch specified in RFC 6902 from the IETF. The main differences are:
    
    * Only `add`, `remove` and `replace` are supported
    
    * `remove` can have have its scope of application applied in its `value`. e.g. `{\"scope\":\"delta\"}
    """
    
    op: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('op') }})
    path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path') }})
    from_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from'), 'exclude': lambda f: f is None }})
    value: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    